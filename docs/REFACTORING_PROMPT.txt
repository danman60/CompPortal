# REFACTORING EXECUTION PROMPT

Copy and paste the prompt below to execute any priority from REFACTORING_RECOMMENDATIONS.md

---

## PROMPT TEMPLATE:

Read docs/REFACTORING_RECOMMENDATIONS.md and implement Priority [NUMBER].

Follow these rules:
1. Read the full Priority [NUMBER] section from the doc
2. Create all files exactly as specified in the "Solution" section
3. Modify files exactly as shown in "Implementation Steps"
4. Run `npm run build` after each file change to catch errors early
5. Follow the testing checklist for this priority
6. Commit with format: "refactor: [brief description] (Priority [NUMBER])"

Do NOT ask for confirmation. Execute the refactoring directly.

---

## EXAMPLE USAGE:

To fix the hardcoded pricing violation:
Read docs/REFACTORING_RECOMMENDATIONS.md and implement Priority 1.

To extract StatusBadge component:
Read docs/REFACTORING_RECOMMENDATIONS.md and implement Priority 2.

To extract Modal component:
Read docs/REFACTORING_RECOMMENDATIONS.md and implement Priority 3.

To create Email Service layer:
Read docs/REFACTORING_RECOMMENDATIONS.md and implement Priority 4.

To refactor EntriesList.tsx:
Read docs/REFACTORING_RECOMMENDATIONS.md and implement Priority 5.

---

## MULTI-PRIORITY EXECUTION:

To execute multiple priorities in sequence:
Read docs/REFACTORING_RECOMMENDATIONS.md and implement Priorities 1, 2, and 3 in order.

---

## PARTIAL EXECUTION:

To extract only the StatusBadge component without replacing all instances:
Read docs/REFACTORING_RECOMMENDATIONS.md, implement Priority 2 Phase 1 only (create StatusBadge.tsx), then replace only in EntriesList.tsx.

---

## VERIFICATION PROMPT:

After implementation, use this to verify:
Read docs/REFACTORING_RECOMMENDATIONS.md and run the testing checklist for Priority [NUMBER]. Report any failures.

---

## ROLLBACK PROMPT:

If something breaks:
Rollback the last refactoring commit. Then read docs/REFACTORING_RECOMMENDATIONS.md and re-implement Priority [NUMBER] more carefully.
